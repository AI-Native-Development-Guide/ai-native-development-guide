<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Refactorings on GitHub Copilot Patterns &amp; Exercises</title><link>/refactoring/</link><description>Recent content in Refactorings on GitHub Copilot Patterns &amp; Exercises</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="/refactoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Asking with open-ended questions</title><link>/refactoring/asking-with-open-ended-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/refactoring/asking-with-open-ended-questions/</guid><description>Asking with Open-Ended Questions # Description # Refactoring is often a complex process. It is not necessarily about what is right and what is wrong, but about understanding the basic concepts and potential improvements. using open questions in GitHub Copilot, developers can work on improving code in a more thoughtful way with the help of GitHub Copilot GitHub Copilot can help developers work on code improvements in a more thoughtful way.</description></item><item><title>Making the calculation part independent</title><link>/refactoring/making-the-calculation-part-independent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/refactoring/making-the-calculation-part-independent/</guid><description>Making the Calculation Part Independent # Description # In the rapidly evolving world of software development, relying on tools like GitHub Copilot can enhance the development process. However, current versions of large language models may have limitations when handling complex calculations. To address this, developers can refactor their code by moving the computation part to another function. This improves code maintainability, readability, and makes it easier to test and develop with AI tools.</description></item><item><title>Writing test code before refactoring</title><link>/refactoring/writing-test-code-before-refactoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/refactoring/writing-test-code-before-refactoring/</guid><description>Writing test code before refactoring # Description # In the modern world of software development, refactoring can be seen as a fun and engaging task, especially with tools like GitHub Copilot at your disposal. It&amp;rsquo;s so easy to dive in and make changes, but without proper tests, even the most promising code modification can lead to unexpected results. This pattern emphasizes the importance of writing tests before refactoring code to ensure that the functionality remains consistent.</description></item></channel></rss>